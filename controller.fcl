FUNCTION_BLOCK

VAR_INPUT
left_border_distance : REAL;
right_border_distance : REAL;
direct_angle : REAL;
trap_distance : REAL;
END_VAR

VAR_OUTPUT
direct_change : REAL;
END_VAR

FUZZIFY left_border_distance
TERM near := (0, 1) (5, 1) (20, 0);
TERM far := (5, 0) (15, 1) (30, 1) (40, 0);
TERM far_away := (30, 0) (40, 1) (50, 1) (60, 0);
END_FUZZIFY

FUZZIFY right_border_distance
TERM near := (0, 1) (5, 1) (20, 0);
TERM far := (5, 0) (15, 1) (30, 1) (40, 0);
TERM far_away := (30, 0) (40, 1) (50, 1) (60, 0);
END_FUZZIFY

FUZZIFY trap_distance
TERM near_left := (-20, 0) (-5, 1) (-2, 1) (1, 0);
TERM left := (-45, 0) (-20, 1) (-15, 1) (-10, 0);
TERM near_right := (-1, 0) (2, 1) (5, 1) (20, 0);
TERM right := (10, 0) (15, 1) (20, 1) (45, 1);
END_FUZZIFY


FUZZIFY direct_angle
TERM central := (-0.5, 0) (0, 1) (0.5, 0);
TERM left := (-35, 0) (-15, 1) (-5, 1) (0, 0);
TERM v_left := (-90, 1) (-60, 1) (-30, 0);
TERM right := (0, 0) (5, 1) (15, 1) (35, 0);
TERM v_right := (30, 0) (60, 1) (90, 1);
END_FUZZIFY

DEFUZZIFY direct_change
TERM straight := (-0.2, 0) (-0.1, 1) (0.1, 1) (0.2, 0);
TERM slightly_left := (-3, 0) (-2, 1) (-1, 1) (0, 0);
TERM rapidly_left := (-7, 0) (-5, 1) (-3, 1) (-1, 0);
TERM slightly_right := (0, 0) (1, 1) (2, 1) (3, 0);
TERM rapidly_right := (1, 0) (3, 1) (5, 1) (7, 0);
METHOD : COG;
DEFAULT := 0;
END_DEFUZZIFY

RULEBLOCK first
AND: MIN;
ACT: MIN;

RULE 0: IF direct_angle is left AND left_border_distance is near THEN direct_change is rapidly_right;
RULE 1: IF direct_angle is right AND right_border_distance is near THEN direct_change is rapidly_left;

RULE 2: IF direct_angle is left AND left_border_distance is far THEN direct_change is slightly_left;
RULE 3: IF direct_angle is right AND right_border_distance is far THEN direct_change is slightly_right;

RULE 8: IF direct_angle is left THEN direct_change is slightly_left;
RULE 9: IF direct_angle is right THEN direct_change is slightly_right;

RULE 10: IF trap_distance is near_left AND left_border_distance is far
          THEN direct_change is slightly_right;

RULE 11: IF trap_distance is near_right AND right_border_distance is far
            THEN direct_change is slightly_left;

RULE 12: IF trap_distance is left OR trap_distance is right THEN direct_change is straight;

END_RULEBLOCK

END_FUNCTION_BLOCK